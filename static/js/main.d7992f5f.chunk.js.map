{"version":3,"sources":["components/shared/Post/Post.module.css","components/shared/Form/Form.module.css","components/shared/PostList/PostList.module.css","reducers/postReducer.js","reducers/index.js","actions/types.js","store.js","config/config.js","components/shared/Post/Post.js","actions/postActions.js","components/shared/PostList/PostList.js","components/layout/Content/Content.js","components/shared/Form/Form.js","components/layout/Sidebar/Sidebar.js","components/pages/Home.js","components/pages/About.js","components/pages/Login.js","components/layout/Header/Header.js","components/layout/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","post","postHeader","postDeleteBtn","postImage","wrap","error","list","initialState","posts","combineReducers","state","arguments","length","undefined","_ref","type","payload","Object","objectSpread","items","concat","toConsumableArray","filter","_ref2","id","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","config","Post","_this$props$post","this","props","userId","title","body","_this$props","index","deletePost","react_default","a","createElement","key","className","onClick","src","alt","Component","connect","postId","dispatch","axios","delete","then","catch","console","PostList","isEmpty","style","noPostsStyle","map","i","shared_Post_Post","textAlign","fontSize","fontWeight","fontStyle","AContent","shared_PostList_PostList","Form","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errorClass","input","onChange","bind","assertThisInitialized","addPost","e","setState","defineProperty","target","value","preventDefault","hasError","newPost","form","values","some","val","_this$state","onSubmit","htmlFor","placeholder","data","uuid","v4","ASidebar","marginTop","shared_Form_Form","Home","fetchPosts","Content_Content","Sidebar_ASidebar","limit","limitQuery","get","About","Login","AHeader","Fragment","react_router_dom","tag","to","exact","activeClassName","AFooter","App","react_redux_es","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7992f5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3eAzK\",\"postHeader\":\"Post_postHeader__3jBo3\",\"postDeleteBtn\":\"Post_postDeleteBtn__3pb2W\",\"postImage\":\"Post_postImage__2eYtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Form_wrap__32u5P\",\"error\":\"Form_error__jJYFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PostList_list__2L7Om\"};","import { FETCH_POSTS, NEW_POST, DELETE_POST } from '../actions/types';\nimport { filter } from 'lodash';\n\nconst initialState = {\n    posts: [],\n    post: {}\n};\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case FETCH_POSTS:\n            return {\n                ...state,\n                items: payload\n            };\n        case NEW_POST:\n            return {\n                ...state,\n                items: [payload, ...state.items]\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                items: filter(state.items, ({ id }) => id !== payload)\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport postReducer from './postReducer';\n\nexport default combineReducers({\n    posts: postReducer\n})","export const FETCH_POSTS = 'FETCH_POSTS';\nexport const NEW_POST = 'NEW_POST';\nexport const DELETE_POST = 'DELETE_POST';","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst initialState = {\n    posts: {\n        items: []\n    }\n};\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer, \n  initialState,\n  applyMiddleware(...middleware)\n);\n\nexport default store;","export default {\n    baseUrl: 'https://jsonplaceholder.typicode.com'\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deletePost } from '../../../actions/postActions';\n\nimport { post, postHeader, postDeleteBtn, postImage } from './Post.module.css';\n\nclass Post extends Component {\n  render() {\n    const { id, userId, title, body } = this.props.post;\n    const { index, deletePost } = this.props;\n\n    return (\n        <div key={id} className={post}>\n            <div className={postHeader}>\n                <h2>{title}</h2>\n               <div>\n                <button onClick={() => deletePost(id)} className={postDeleteBtn}>&#10005;</button>\n               </div>\n            </div>\n            <h5>Date: 2019-04-0{index}. Created by: {userId}</h5>\n            <div className={postImage}>\n                <img src=\"https://cdn.the-scientist.com/assets/articleNo/30636/iImg/2186/b531a5bf-c7af-43de-9fc1-3560813f9d49-online.jpg\" alt=\"\"/>\n            </div>\n            <div className=\"post-body\">\n                <p>\n                    {body}\n                </p>\n            </div>                    \n        </div>                    \n    )\n  }\n}\n\nPost.propTypes = {\n    post: PropTypes.object.isRequired,\n    index: PropTypes.number.isRequired,\n    deletePost: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deletePost })(Post);","import { FETCH_POSTS, NEW_POST, DELETE_POST } from './types';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport config from '../config/config';\n\nexport const fetchPosts = (limit = 3) => dispatch => {\n    const limitQuery = `?_limit=${limit}`;\n    axios\n        .get(`${config.baseUrl}/posts${limitQuery}`)\n        .then(({ data }) => \n            dispatch({\n                type: FETCH_POSTS,\n                payload: data\n            })\n        )\n        .catch(console.error);\n};\n\nexport const newPost = newPost => dispatch => {\n    axios\n        .post(`${config.baseUrl}/posts`, newPost)\n        .then(({ data }) => \n            dispatch({\n                type: NEW_POST,\n                payload: {\n                    ...data,\n                    id: uuid.v4()\n                }\n            })\n        )\n        .catch(console.error);\n};\n\nexport const deletePost = postId => dispatch => {\n    axios\n        .delete(`${config.baseUrl}/posts/${postId}`)\n        .then(() => \n            dispatch({\n                type: DELETE_POST,\n                payload: postId\n            })\n        )\n        .catch(console.error)\n};","import React, { Component } from 'react';\nimport Post from '../Post/Post';\nimport PropTypes from 'prop-types';\n\nimport { list } from './PostList.module.css';\nimport { isEmpty } from 'lodash';\n\nclass PostList extends Component {\n  render() {\n    const posts = isEmpty(this.props.posts)\n                  ? <p style={noPostsStyle}>No posts</p>\n                  : this.props.posts.map((post, i) => {\n                    return <Post key={post.id} post={post} index={i} />\n                  });\n    return (\n      <div className={list}>\n        { posts }\n      </div>\n    )\n  }\n}\n\nconst noPostsStyle = {\n  textAlign: 'center',\n  fontSize: '24px',\n  fontWeight: '500',\n  fontStyle: 'italic'\n};\n\nPostList.propTypes = {\n    posts: PropTypes.array.isRequired\n};\n\nexport default PostList;","import React, { Component } from 'react';\nimport PostList from '../../shared/PostList/PostList';\n\nimport './Content.css';\n\nclass AContent extends Component {\n    render () {\n        return (\n            <div id=\"content\">\n                <PostList posts={this.props.posts} />\n            </div>\n        )\n    }\n};\n\nexport default AContent;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newPost } from '../../../actions/postActions';\nimport PropTypes from 'prop-types';\n\nimport { wrap, error } from './Form.module.css';\n\nclass Form extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      userId: 1,\n      title: '',\n      body: ''\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.addPost = this.addPost.bind(this);\n  }\n\n  onChange (e) {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  addPost (e) {\n    e.preventDefault();\n\n    if(this.hasError(this.state)) return;\n\n    this.props.newPost(this.state);\n    this.setState({\n      userId: 1,\n      title: '',\n      body: ''\n    })\n  }\n\n  hasError(form) {\n    const values = Object.values(form);\n    return values.some(val => !val);\n  }\n\n  errorClass = (input) => {\n    return input ? '' : error;\n  }\n\n  render() {\n    const { userId, title, body } = this.state;\n\n    return (\n      <div className={wrap}>\n        <form onSubmit={this.addPost}>\n          <label htmlFor=\"userId\">UserId</label>\n          <input onChange={this.onChange} value={userId} className={this.errorClass(userId)} type=\"number\" id=\"userId\" placeholder=\"userId\" />\n          <label htmlFor=\"title\">Title</label>\n          <input onChange={this.onChange} value={title} className={this.errorClass(title)} type=\"text\" id=\"title\" placeholder=\"title\" />\n          <label htmlFor=\"body\">Body</label>\n          <textarea onChange={this.onChange} value={body} className={this.errorClass(body)} type=\"text\" id=\"body\" placeholder=\"body\"></textarea>\n          <input type=\"submit\" value=\"Add\"/>\n        </form>\n      </div>\n    )\n  }\n}\n\nForm.propTypes = {\n    newPost: PropTypes.func.isRequired\n};\n\nexport default connect(null, { newPost })(Form);","import React, { Component } from 'react';\nimport Form from '../../shared/Form/Form';\n\nimport './Sidebar.css';\n\nexport default class ASidebar extends Component {\n    render () {\n        return (\n            <div id=\"sidebar\">\n                <h2 style={{ marginTop: '0' }}>Add Post</h2>\n                <Form></Form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../../actions/postActions';\nimport PropTypes from 'prop-types';\n\nimport { isEmpty } from 'lodash';\n\nimport Content from \"../layout/Content/Content\";\nimport Sidebar from \"../layout/Sidebar/Sidebar\";\n\nclass Home extends Component {\n\n    componentWillMount () {\n        if (isEmpty(this.props.posts)) this.props.fetchPosts();\n    }\n\n    render() {\n        const { posts } = this.props;\n\n        return (\n            <div className=\"main\">\n                <Content posts={posts} />\n                <Sidebar />\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    fetchPosts: PropTypes.func.isRequired,\n    posts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = ({ posts }) => ({\n    posts: posts.items\n});\n\nexport default connect(mapStateToProps, { fetchPosts })(Home);","import React, { Component } from 'react';\n\nexport default class About extends Component {\n  render() {\n    return (\n        <div className=\"about block\">\n            <h2>About</h2>\n            <p>React blog for React.js practicing for Vue.js developer.</p>\n        </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Login extends Component {\n  render() {\n    return (\n        <div className=\"login block\">\n            <h2>Login</h2>\n            <p>Coming soon...</p>\n        </div>\n    )\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.css';\n\nexport default function AHeader () {\n    return (\n        <React.Fragment>\n            <header>\n                <h1>React Blog</h1>\n            </header>\n            <div className=\"menu\">\n                    <ul>\n                        <li>\n                            <NavLink tag=\"li\" to=\"/\" exact activeClassName=\"menu-item-active\">Blog</NavLink>\n                        </li>\n                        <li>\n                            <NavLink tag=\"li\" to=\"/about\" activeClassName=\"menu-item-active\">About</NavLink>\n                        </li>\n                        <li>\n                            <NavLink tag=\"li\" to=\"/login\" activeClassName=\"menu-item-active\">Login</NavLink>\n                        </li>\n                    </ul>\n                </div>\n        </React.Fragment>\n    )\n};","import React from 'react';\n\nimport './Footer.css';\n\nexport default function AFooter () {\n    return (\n        <footer>\n            <span className=\"caption\">Powered by React.js</span>\n        </footer>\n    )\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nimport Home from './components/pages/Home';\nimport About from './components/pages/About';\nimport Login from './components/pages/Login';\n\nimport Header from \"./components/layout/Header/Header\";\nimport Footer from \"./components/layout/Footer/Footer\";\n\nimport './App.css';\nimport './styles/responsive.css';\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <Router>\n        <div>\n          <Header />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/login\" component={Login} />\n          <Footer />\n        </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}